{"version":3,"file":"static/js/MoviesView.f2eca32a.chunk.js","mappings":"wWAEAA,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGAGKF,IAAAA,IAAA,uCAA0CC,IAH/C,uBAEKE,EAFL,EAEHC,KAAQD,QAFL,kBAKEA,GALF,kEAQA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,yFAGKN,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDK,IAHzD,uBAEKH,EAFL,EAEHC,KAAQD,QAFL,kBAKEA,GALF,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,yFACkBR,IAAAA,IAAA,iBAAoBQ,EAApB,oBAAuCP,IADzD,uBACGG,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,yFAGKR,IAAAA,IAAA,iBAAoBQ,EAApB,4BAA+CP,IAHpD,uBAEKS,EAFL,EAEHN,KAAQM,KAFL,kBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,yFAGKR,IAAAA,IAAA,iBAAoBQ,EAApB,4BAA+CP,IAHpD,uBAEKE,EAFL,EAEHC,KAAQD,QAFL,kBAKEA,GALF,kEAQA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA8BJ,GAA9B,2FAGKR,IAAAA,IAAA,iBAAoBQ,EAApB,2BAA8CP,IAHnD,mBAEKE,EAFL,EAEHC,KAAQD,UAGJU,EAAUV,EAAQW,QAAO,kBAAuB,YAAvB,EAAGC,QAA+BC,OAL5D,yCAQIH,GARJ,cAUHI,EAAAA,OAAAA,QAAe,0CAVZ,kBAWI,yBAXJ,qE,8GC3CP,EAAwB,qB,SCCT,SAASC,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAC9B,OAAO,eAAIC,UAAWC,EAAf,SAA8BF,ICFvC,MAAuB,yBAAvB,EAAwD,0BAAxD,EAA2F,2BAA3F,EAAqI,iCAArI,EAA8K,0BAA9K,EAAoN,8BCErM,SAASG,EAAT,GAAoD,IAA9BhB,EAA6B,EAA7BA,MAAOiB,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACpD,OACE,kBAAMJ,UAAWC,EAAaE,SAAUA,EAAxC,WACE,mBAAOE,QAAQ,MAAML,UAAWC,EAAhC,WACE,kBACED,UAAWC,EACXK,GAAG,MACHF,SAAUA,EACVG,MAAOrB,EACPsB,YAAY,OACZb,KAAK,UAGP,iBAAMK,UAAWC,EAAjB,yBACA,iBAAMD,UAAWC,QAEnB,mBAAQD,UAAWC,EAAeN,KAAK,SAAvC,uBClBN,MAA4B,kCAA5B,EAA+E,uCCOzEc,GAAaC,EAAAA,EAAAA,OAAK,kBACtB,iCAKa,SAASC,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAO1B,EAAP,KAAc2B,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAc,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,UAE7DC,EAAAA,EAAAA,YAAU,WACJJ,IACFnC,EAAAA,EAAAA,IAAsBmC,GAAaK,KAAKV,KAEzC,CAACK,IAkBJ,OACE,iBAAKpB,UAAWC,EAAhB,WACE,SAACH,EAAD,CAAOC,MAAM,oBACb,SAACG,EAAD,CAAYhB,MAAOA,EAAOiB,SAfb,SAAAuB,GACfA,EAAIC,kBAEJ1C,EAAAA,EAAAA,IAAsBC,GAAOuC,KAAKV,GAElCC,EAAS,CACPY,SAAUZ,EAASE,SACnBI,OAAO,UAAD,OAAYpC,MAQ4BkB,SAnBjC,SAAAsB,GACfb,EAASa,EAAIG,OAAOtB,WAoBlB,SAAC,EAAAuB,SAAD,CAAUC,UAAU,kDAApB,SACoB,IAAjBjB,EAAMkB,QAAgBZ,GACrB,eAAIpB,UAAWC,EAAf,yDAIA,SAACQ,EAAD,CAAYwB,OAAQnB","sources":["components/Services/API.js","webpack://react-assignment-moviesearch/./src/components/Component/Title/Title.module.css?50d9","components/Component/Title/Title.js","webpack://react-assignment-moviesearch/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.js","webpack://react-assignment-moviesearch/./src/views/MoviesPageView/MoviesPageView.module.css?1ce2","views/MoviesPageView/MoviesPageView.js"],"sourcesContent":["import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '2a8ba5d6d1e87afb6f0a309b33e3467f';\n\nexport async function getTrendingFilms() {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n\n  return results;\n}\n\nexport async function getFilmsBySearchQuery(query) {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n\n  return results;\n}\n\nexport async function getFilmById(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n\n  return data;\n}\n\nexport async function getCastData(movieId) {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n\n  return cast;\n}\n\nexport async function getReviewsData(movieId) {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n\n  return results;\n}\n\nexport async function getTrailerData(movieId) {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${movieId}/videos?api_key=${API_KEY}`);\n\n  const trailer = results.filter(({ type }) => type === 'Trailer').pop();\n\n  if (trailer) {\n    return trailer;\n  } else {\n    Notify.warning('There is no trailer for current movie!');\n    return 'No trailer was found!';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__0nisx\"};","import styles from './Title.module.css';\nimport propTypes from 'prop-types';\nexport default function Title({ title }) {\n  return <h2 className={styles.title}>{title}</h2>;\n}\n\nTitle.propTypes = {\n  title: propTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"input\":\"SearchForm_input__HOxJo\",\"button\":\"SearchForm_button__UXY06\",\"input__field\":\"SearchForm_input__field__UuRZx\",\"label\":\"SearchForm_label__GvSVH\",\"focus__bg\":\"SearchForm_focus__bg__77XPS\"};","import styles from './SearchForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function SearchForm({ query, onSubmit, onChange }) {\n  return (\n    <form className={styles.form} onSubmit={onSubmit}>\n      <label htmlFor=\"inp\" className={styles.input__field}>\n        <input\n          className={styles.input}\n          id=\"inp\"\n          onChange={onChange}\n          value={query}\n          placeholder=\"&nbsp;\"\n          type=\"text\"\n        />\n\n        <span className={styles.label}>Movie Name</span>\n        <span className={styles.focus__bg}></span>\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  query: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_box\":\"MoviesPageView_movie_box__2gDO1\",\"results__error\":\"MoviesPageView_results__error__pM89d\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getFilmsBySearchQuery } from 'components/Services/API';\n\nimport Title from '../../components/Component/Title/Title';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport styles from './MoviesPageView.module.css';\n\nconst MoviesList = lazy(() =>\n  import(\n    '../../components/Component/MoviesList/MoviesList' /* webpackChunkName: \"MoviesList\" */\n  )\n);\n\nexport default function MoviesView() {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState([]);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const searchQuery = new URLSearchParams(location.search).get('query'); //parse value of query param with location.search\n\n  useEffect(() => {\n    if (searchQuery) {\n      getFilmsBySearchQuery(searchQuery).then(setMovie);\n    }\n  }, [searchQuery]);\n\n  const onChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n\n    getFilmsBySearchQuery(query).then(setMovie);\n\n    navigate({\n      pathname: navigate.location,\n      search: `?query=${query}`,\n    });\n    // navigate(`?query=${query}`, { search: `?query=${query}` });\n  };\n\n  return (\n    <div className={styles.movie_box}>\n      <Title title=\"Search results\" />\n      <SearchForm query={query} onSubmit={onSubmit} onChange={onChange} />\n\n      <Suspense fallback={<h2>Loading movie list...</h2>}>\n        {movie.length === 0 && searchQuery ? (\n          <h2 className={styles.results__error}>\n            There's no movies for your search request!\n          </h2>\n        ) : (\n          <MoviesList movies={movie} />\n        )}\n      </Suspense>\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","getTrendingFilms","results","data","getFilmsBySearchQuery","query","getFilmById","movieId","getCastData","cast","getReviewsData","getTrailerData","trailer","filter","type","pop","Notify","Title","title","className","styles","SearchForm","onSubmit","onChange","htmlFor","id","value","placeholder","MoviesList","lazy","MoviesView","useState","setQuery","movie","setMovie","navigate","useNavigate","location","useLocation","searchQuery","URLSearchParams","search","get","useEffect","then","evt","preventDefault","pathname","target","Suspense","fallback","length","movies"],"sourceRoot":""}