{"version":3,"file":"static/js/Reviews.0c382afc.chunk.js","mappings":"2MACA,EAA0B,yBAA1B,EAAmE,+B,6BCKpD,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeL,GAASM,KAAKH,KAC5B,CAACH,KAGF,gBAAKO,UAAWC,EAAhB,UACU,OAAPN,QAAO,IAAPA,OAAA,EAAAA,EAASO,QAAS,GACjB,eAAIF,UAAWC,EAAf,SACGN,EAAQQ,KAAI,YAA8C,IAErDC,EACAC,EAHUC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QAClBC,EADgD,EAArBC,eAC3BD,YASR,OANoB,OAAhBA,EACFL,EAAMK,EAAYE,MAAM,EAAGF,EAAYP,QAEvCG,EAAU,0CAAsCI,IAIhD,gBAAaT,UAAU,YAAvB,WACE,gBAAKY,MAAM,QAAQC,IAAKT,GAAOC,EAAYS,IAAI,kBAC/C,eAAGd,UAAU,SAAb,qBAA+BO,MAC/B,eAAGP,UAAU,SAAb,cAAwBQ,OAHjBF,SASf,cAAGN,UAAU,iBAAb","sources":["webpack://react-assignment-moviesearch/./src/components/Component/Reviews/Reviews.module.scss?3ec6","components/Component/Reviews/Reviews.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__u3-19\",\"reviews__list\":\"Reviews_reviews__list__e+TsR\"};","import styles from './Reviews.module.scss';\nimport { useState, useEffect } from 'react';\n\nimport { getReviewsData } from '../../Services/API';\nimport PropTypes from 'prop-types';\n\nexport default function Reviews({ movieId }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getReviewsData(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <div className={styles.reviews}>\n      {reviews?.length > 0 ? (\n        <ul className={styles.reviews__list}>\n          {reviews.map(({ id, author, content, author_details }) => {\n            const { avatar_path } = author_details;\n            let url;\n            let avatar_url;\n            if (avatar_path !== null) {\n              url = avatar_path.slice(1, avatar_path.length);\n            } else {\n              avatar_url = `https://www.gravatar.com/avatar/${avatar_path}`;\n            }\n\n            return (\n              <li key={id} className=\"list_item\">\n                <img width=\"100px\" src={url || avatar_url} alt=\"User Profile\" />\n                <p className=\"author\">Author: {author}</p>\n                <p className=\"review\"> {content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p className=\"reviews__error\">No reviews for this movie was found.</p>\n      )}\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["Reviews","movieId","useState","reviews","setReviews","useEffect","getReviewsData","then","className","styles","length","map","url","avatar_url","id","author","content","avatar_path","author_details","slice","width","src","alt"],"sourceRoot":""}