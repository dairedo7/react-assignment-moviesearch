{"version":3,"file":"static/js/Cast.58f6e16d.chunk.js","mappings":"sNACA,EAAuB,mBAAvB,EAAkD,oBAAlD,EAA6E,mBAA7E,EAA2G,uB,6BCM5F,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC7B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYL,GAASM,KAAKH,KACzB,CAACH,KAGF,eAAIO,UAAWC,EAAf,SACGN,EAAKO,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAGnC,OACE,gBAAaN,UAAWC,EAAxB,WACE,gBACED,UAAWC,EACXM,IACEH,EAAY,yCAC0BA,GAClCI,EAENC,IAAKJ,KAGP,cAAGL,UAAWC,EAAd,SAA4BI,KAC5B,eAAGL,UAAWC,EAAd,wBAAuCK,OAZhCH","sources":["webpack://react-assignment-moviesearch/./src/components/Component/Cast/Cast.module.scss?e4bb","components/Component/Cast/Cast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Cast_item__chUTS\",\"image\":\"Cast_image__dsbx5\",\"name\":\"Cast_name__w6JzO\",\"crewList\":\"Cast_crewList__2JxRo\"};","import { useState, useEffect } from 'react';\nimport styles from './Cast.module.scss';\nimport { getCastData } from '../../Services/API';\nimport PropTypes from 'prop-types';\n\nimport unavailableImage from '../../../images/unavailableIMG.png';\n\nexport default function Cast({ movieId }) {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getCastData(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <ul className={styles.crewList}>\n      {cast.map(({ id, profile_path, name, character }) => {\n        // console.log(actor);\n\n        return (\n          <li key={id} className={styles.item}>\n            <img\n              className={styles.image}\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : unavailableImage\n              }\n              alt={name}\n            />\n\n            <p className={styles.name}>{name}</p>\n            <p className={styles.name}>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["Cast","movieId","useState","cast","setCast","useEffect","getCastData","then","className","styles","map","id","profile_path","name","character","src","unavailableImage","alt"],"sourceRoot":""}