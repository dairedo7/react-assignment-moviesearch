{"version":3,"file":"static/js/MoviesView.30fb95e5.chunk.js","mappings":"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","sources":["components/Services/API.js","components/Component/Title/Title.module.css","components/Component/Title/Title.js","webpack://react-assignment-moviesearch/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.js","views/MoviesPageView/MoviesPageView.module.css","views/MoviesPageView/MoviesPageView.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '2a8ba5d6d1e87afb6f0a309b33e3467f';\n\nexport async function getTrendingFilms() {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n\n  return results;\n}\n\nexport async function getFilmsBySearchQuery(query) {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}`);\n\n  return results;\n}\n\nexport async function getFilmById(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n\n  return data;\n}\n// let movieId = 14911;\nexport async function getCastData(movieId) {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n\n  return cast;\n}\n\nexport async function getReviewsData(movieId) {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n\n  return results;\n}\n\nexport async function getTrailerData(movieId) {\n  const {\n    data: { results },\n  } = await axios.get(`/movie/${movieId}/videos?api_key=${API_KEY}`);\n\n  const trailers = [];\n  for (const item of results) {\n    const { name, type } = item;\n    if (name === 'Official Trailer') {\n      trailers.push(item);\n    }\n    if (type === 'Trailer') {\n      trailers.push(item);\n    }\n  }\n\n  return trailers;\n}\n","// extracted by mini-css-extract-plugin\nexport default {};","import styles from './Title.module.css';\nimport propTypes from 'prop-types';\nexport default function Title({ title }) {\n  return <h2 className={styles.title}>{title}</h2>;\n}\n\nTitle.propTypes = {\n  title: propTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchForm_input__HOxJo\",\"button\":\"SearchForm_button__UXY06\"};","import styles from './SearchForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function SearchForm({ query, onSubmit, onChange }) {\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        className={styles.input}\n        onChange={onChange}\n        value={query}\n        type=\"text\"\n      />\n      <button className={styles.button} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  query: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { getFilmsBySearchQuery } from 'components/Services/API';\n\nimport Title from '../../components/Component/Title/Title';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport styles from './MoviesPageView.module.css';\n\nconst MoviesList = lazy(() =>\n  import(\n    '../../components/Component/MoviesList/MoviesList' /* webpackChunkName: \"MoviesList\" */\n  )\n);\n\nexport default function MoviesView() {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState([]);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const searchQuery = new URLSearchParams(location.search).get('query'); //parse value of query param with location.search\n  console.log(searchQuery);\n  useEffect(() => {\n    if (searchQuery) {\n      getFilmsBySearchQuery(searchQuery).then(setMovie);\n    }\n  }, [searchQuery]);\n\n  const onChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n\n    getFilmsBySearchQuery(query).then(setMovie);\n\n    navigate({\n      pathname: navigate.location,\n      search: `?query=${query}`,\n    });\n    // navigate(`?query=${query}`, { search: `?query=${query}` });\n  };\n\n  return (\n    <div className={styles.movie_box}>\n      <Title title=\"Search results\" />\n      <SearchForm query={query} onSubmit={onSubmit} onChange={onChange} />\n\n      <Suspense fallback={<h2>Loading movie list...</h2>}>\n        {movie.length === 0 && searchQuery ? (\n          <h2>There's no movies for your search request!</h2>\n        ) : (\n          <MoviesList movies={movie} />\n        )}\n      </Suspense>\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","getTrendingFilms","results","data","getFilmsBySearchQuery","query","getFilmById","movieId","getCastData","cast","getReviewsData","getTrailerData","trailers","item","name","type","push","Title","title","className","styles","SearchForm","onSubmit","onChange","value","MoviesList","lazy","MoviesView","useState","setQuery","movie","setMovie","navigate","useNavigate","location","useLocation","searchQuery","URLSearchParams","search","get","console","log","useEffect","then","evt","preventDefault","pathname","target","Suspense","fallback","length","movies"],"sourceRoot":""}